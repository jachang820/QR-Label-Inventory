{{> nav }}

<div class="container">

  <h1>Customer Orders</h1>

  {{> error_msg }}

  <table>
    <tr>
      <th>ID</th>
      <th>Invoice #</th>
      <th>Size</th>
      <th>Notes</th>
      <th>Action</th>
    </tr>

    {{#each orders}}
      <tr>
        <td>
          <a href="/customer_orders/{{this.id}}">{{this.id}}</a>
          </td>
        <td>{{this.label}}</td>
        <td>{{this.size}}</td>
        <td>{{this.notes}}</td>
        <td>
          <button class="btn btn-danger" onclick="deleteOrder('{{this.id}}')">Delete</button>
        </td>
      </tr>
    {{/each}}

  </table>

  <div id="new-order">
    <h2>New Order</h2>

    <form action="/customer_orders" method="POST">
      <label for="label">Invoice #: </label>
      <input id="label" type="text" name="label">

      <label for="notes">Notes: </label>
      <input id="notes" type="text" name="notes">

      <table id="new-order-table">
        <tbody>
          <tr>
            <th>Item</th>
            <th>SKU</th>
            <th>Action</th>
          </tr>

          <tr class="new-order-row">
            <td>
              <input id="qrcode0" type="text" name="items[0][qrcode]">
            </td>

            <td>
              <select id="sku0" name="items[0][sku]">
                <option>Select a SKU:</option>
                {{#each skus}}
                  <option>{{this.id}} -- {{this.upc}}</option>
                {{/each}}
              </select>
            </td>
            <td></td>
          </tr>
        </tbody>

      </table>

      <input type="hidden" value="1" name="count" id="item-count">

      <button class="btn btn-primary" onClick="addItem()" type="button">New Item</button>
      <br>
      <br>
      <input class="btn btn-success" type="submit" value="Submit Order">
    </form>
  </div>
</div>

<script>
  let itemCount = 1;

  function deleteOrder(id) {
    let xhttp = new XMLHttpRequest();
    xhttp.open("DELETE", "/api/customer_orders/" + id, true);
    xhttp.onreadystatechange = function(event) {
      if (xhttp.readyState === 4) {
        if (xhttp.status === 200) {
          location.reload();
        } else {
          error.innerHTML = "<ul><li>Error: " + xhttp.statusText + "</li></ul>";
        }
      }
    };
    xhttp.send();
  }

  function createDeleteButton() {
    let deleteButton = document.createElement("button");
    deleteButton.innerText = "Delete";
    deleteButton.setAttribute("class", "btn btn-danger");
    deleteButton.addEventListener("click", function() {
      return deleteItem(this)
    });
    return deleteButton;
  }

  function addItem() {
    let newRow = document.getElementsByClassName("new-order-row")[0].cloneNode(true);

    let inputItem = newRow.querySelector("#qrcode0");
    inputItem.name = "items[" + itemCount + "][qrcode]";
    inputItem.id = "qrcode" + itemCount;

    let selectSKU = newRow.querySelector("#sku0");
    selectSKU.name = "items[" + itemCount + "][sku]";
    selectSKU.id = "sku" + itemCount;

    newRow.children[2].appendChild(createDeleteButton());

    document.getElementById("new-order-table").children[0].appendChild(newRow);

    itemCount++;
    document.getElementById('item-count').value = itemCount;
  }

  function deleteItem(deleteButton) {
    let row = deleteButton.parentNode.parentNode;
    let table = row.parentNode;

    table.removeChild(row);
    itemCount--;
    document.getElementById('item-count').value = itemCount;
  }
</script>